swagger: "2.0"
info:
  version: "1.0.0"
  title: "Event Management API"
basePath: /api
schemes:
  - http
  - https
consumes:
  - application/json
produces:
  - application/json

paths:
  /events:
    get:
      tags:
        - Events
      summary: Get a list of events
      responses:
        200:
          description: Successful response
          schema:
            type: array
            items:
              $ref: "#/definitions/Event"
    post:
      tags:
        - Events
      summary: Create a new event
      parameters:
        - name: event
          in: body
          required: true
          schema:
            $ref: "#/definitions/Event"
      responses:
        201:
          description: Event created successfully
  /events/{eventId}:
    get:
      tags:
        - Events
      summary: Get a specific event by ID
      parameters:
        - name: eventId
          in: path
          required: true
          type: integer
      responses:
        200:
          description: Successful response
          schema:
            $ref: "#/definitions/Event"
        404:
          description: Event not found
    put:
      tags:
        - Events
      summary: Update a specific event by ID
      parameters:
        - name: eventId
          in: path
          required: true
          type: integer
        - name: event
          in: body
          required: true
          schema:
            $ref: "#/definitions/Event"
      responses:
        200:
          description: Event updated successfully
        404:
          description: Event not found
    delete:
      tags:
        - Events
      summary: Delete a specific event by ID
      parameters:
        - name: eventId
          in: path
          required: true
          type: integer
      responses:
        204:
          description: Event deleted successfully
        404:
          description: Event not found

  /spaces:
    get:
      tags:
        - Spaces
      summary: Get a list of spaces
      responses:
        200:
          description: Successful response
          schema:
            type: array
            items:
              $ref: "#/definitions/Space"
    post:
      tags:
        - Spaces
      summary: Create a new space
      parameters:
        - name: space
          in: body
          required: true
          schema:
            $ref: "#/definitions/Space"
      responses:
        201:
          description: Space created successfully
  /spaces/{spaceId}:
    get:
      tags:
        - Spaces
      summary: Get a specific space by ID
      parameters:
        - name: spaceId
          in: path
          required: true
          type: integer
      responses:
        200:
          description: Successful response
          schema:
            $ref: "#/definitions/Space"
        404:
          description: Space not found
    put:
      tags:
        - Spaces
      summary: Update a specific space by ID
      parameters:
        - name: spaceId
          in: path
          required: true
          type: integer
        - name: space
          in: body
          required: true
          schema:
            $ref: "#/definitions/Space"
      responses:
        200:
          description: Space updated successfully
        404:
          description: Space not found
    delete:
      tags:
        - Spaces
      summary: Delete a specific space by ID
      parameters:
        - name: spaceId
          in: path
          required: true
          type: integer
      responses:
        204:
          description: Space deleted successfully
        404:
          description: Space not found

  /tickets:
    get:
      tags:
        - Tickets
      summary: Get a list of tickets
      responses:
        200:
          description: Successful response
          schema:
            type: array
            items:
              $ref: "#/definitions/Ticket"
    post:
      tags:
        - Tickets
      summary: Create a new ticket
      parameters:
        - name: ticket
          in: body
          required: true
          schema:
            $ref: "#/definitions/Ticket"
      responses:
        201:
          description: Ticket created successfully
  /tickets/{ticketId}:
    get:
      tags:
        - Tickets
      summary: Get a specific ticket by ID
      parameters:
        - name: ticketId
          in: path
          required: true
          type: integer
      responses:
        200:
          description: Successful response
          schema:
            $ref: "#/definitions/Ticket"
        404:
          description: Ticket not found
    put:
      tags:
        - Tickets
      summary: Update a specific ticket by ID
      parameters:
        - name: ticketId
          in: path
          required: true
          type: integer
        - name: ticket
          in: body
          required: true
          schema:
            $ref: "#/definitions/Ticket"
      responses:
        200:
          description: Ticket updated successfully
        404:
          description: Ticket not found
    delete:
      tags:
        - Tickets
      summary: Delete a specific ticket by ID
      parameters:
        - name: ticketId
          in: path
          required: true
          type: integer
      responses:
        204:
          description: Ticket deleted successfully
        404:
          description: Ticket not found

definitions:
  Event:
    type: object
    properties:
      id:
        type: integer
      name:
        type: string
      date:
        type: string
    required:
      - name
      - date

  Space:
    type: object
    properties:
      id:
        type: integer
      name:
        type: string
    required:
      - name

  Ticket:
    type: object
    properties:
      id:
        type: integer
      event_id:
        type: integer
      space_id:
        type: integer
      price:
        type: number
    required:
      - event_id
      - space_id
      - price
